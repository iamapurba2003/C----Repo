{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red84\green84\blue96;\red22\green22\blue29;\red115\green152\blue70;
\red82\green149\blue79;\red215\green130\blue104;\red166\green165\blue220;\red186\green150\blue75;\red189\green189\blue199;
\red64\green154\blue236;\red78\green122\blue119;}
{\*\expandedcolortbl;;\csgenericrgb\c32941\c32941\c37647;\csgenericrgb\c8627\c8627\c11373;\csgenericrgb\c45098\c59608\c27451;
\csgenericrgb\c32157\c58431\c30980;\csgenericrgb\c84314\c50980\c40784;\csgenericrgb\c65098\c64706\c86275;\csgenericrgb\c72941\c58824\c29412;\csgenericrgb\c74118\c74118\c78039;
\csgenericrgb\c25098\c60392\c92549;\csgenericrgb\c30588\c47843\c46667;}
\paperw11900\paperh16840\margl1440\margr1440\vieww34360\viewh21600\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs40 \cf2 \cb3 // Created by Apurba Ghosh on 31/03/23.\
\
\cf4 #include \cf5 <iostream>\
\cf6 using namespace \cf7 std
\f1\b \cf6 ;\
\

\f0\b0 \cf2 // Q.1) Write a program to print numbers from 1 to 10.\
\cf6 void \cf8 PrintNumbers\cf9 () \{\
    \cf6 for \cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i <= \cf10 10
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        cout \cf11 << \cf9 i \cf11 << \cf9 endl
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\}\
\
\cf2 // Q.2) Write a program that asks the user for a positive integer value. The program should calculate the sum of all the\
// integers from 1 up to the number entered. For example, if the user enters 20, the loop will find the sum of 1, 2, 3, 4, ... 20\
\
\cf6 void \cf8 SumOfNumbersInLoop\cf9 () \{\
    \cf6 int \cf9 sum = \cf10 0
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 number
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf5 "Enter a Number? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 number
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 for\cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i <= number
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        sum = sum + i
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
    cout \cf11 << \cf5 "The Sum from (1 -> " \cf11 << \cf9 number \cf11 << \cf5 ") is " \cf11 << \cf9 sum \cf11 << \cf9 endl
\f1\b \cf6 ;\

\f0\b0 \cf9 \}\
\
\cf2 // Q.3) Write a program that prompts the user to input a number and prints its\
// multiplication table.\
\
\cf6 void \cf8 MultiplicationTable\cf9 () \{\
    \cf6 int \cf9 table
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf5 "Enter which Multiplication Table to Show? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 table
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 for\cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i <= \cf10 10
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        cout \cf11 << \cf9 table \cf11 << \cf5 " X " \cf11 << \cf9 i \cf11 << \cf5 " = " \cf11 << \cf9 table*i \cf11 << \cf9 endl
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\}\
\
\
\cf2 // Q.4) Write a program that prompts the user to input a number and prints its factorial. The factorial of an integer n\
// is defined as n! = 1 x 2 x 3 x ... x n; if n > 0 = 1; if n = 0 For instance, 6! can be calculated as 1 x 2 x 3 x 4 x 5 x 6.\
\
\cf6 void \cf8 factorial\cf9 () \{\
    \cf6 int \cf9 fact = \cf10 1
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 number
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf5 "Enter a Number? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 number
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 for\cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i < number
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        fact = fact * (i+\cf10 1\cf9 )
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
    cout \cf11 << \cf5 "Factorial of " \cf11 << \cf9 number \cf11 << \cf5 " is " \cf11 << \cf9 fact
\f1\b \cf6 ;\

\f0\b0 \cf9 \}\
\
\
\cf2 // Q.5)Two numbers are entered through the keyboard. Write a program to find the value of one number raised to the power of another.\
\
\cf6 void \cf8 RaisedToPower\cf9 () \{\
    \cf6 int \cf9 num1
\f1\b \cf6 , 
\f0\b0 \cf9 num2
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 power = num1
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf5 "Enter Two Numbers? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 num1 \cf11 >> \cf9 num2
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 for\cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i <= num2
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        power = power * num1
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
    cout \cf11 << \cf9 num1 \cf11 << \cf5 " raised to Power " \cf11 << \cf9 num2 \cf11 << \cf5 " is " \cf11 << \cf9 power
\f1\b \cf6 ;\
\

\f0\b0 \cf9 \}\
\
\
\cf2 // Q.6)Write a program that prompts the user to input a number and reverse its digits. For example, the reverse of 12345\
// is 54321; reverse of 5600 is 65.\
\
\cf6 void \cf8 reversed\cf9 () \{\
    \cf6 int \cf9 num
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 reversed = \cf10 0
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf5 "Enter the number to be reversed? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 num
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // To take out length of the number\
    \cf6 int \cf9 temp = num
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 length = \cf10 0
\f1\b \cf6 ;\
    
\f0\b0 while \cf9 (temp != \cf10 0\cf9 ) \{\
        temp = temp/\cf10 10
\f1\b \cf6 ;\
        
\f0\b0 \cf9 length++
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\
    \cf2 // Getting the Number Reversed, Omitting 0s isn't achieved yet.\
    \cf6 int \cf9 num2 = num
\f1\b \cf6 ;\
    
\f0\b0 for\cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i <= length
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        \cf6 int \cf9 cur = num2%\cf10 10
\f1\b \cf6 ;\
        
\f0\b0 \cf9 num2 /= \cf10 10
\f1\b \cf6 ;\
        
\f0\b0 \cf9 reversed = reversed*\cf10 10 \cf9 + cur
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
    cout \cf11 << \cf5 "Before Reversal :~ " \cf11 << \cf9 num \cf11 << \cf9 endl
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf5 "After Reversal :~ " \cf11 << \cf9 reversed \cf11 << \cf9 endl
\f1\b \cf6 ;\
\

\f0\b0 \cf9 \}\
\
\
\cf2 // Q.7) Write a program that asks the user to input a positive integer. Your program should find and display the sum of\
// digits of a number. For example, the sum of digits of number 32518 is 3+2+5+1+8 = 19.\
\
\cf6 void \cf8 DigitSum\cf9 () \{\
\
    \cf2 // Variable Declarations\
    \cf6 int \cf9 num
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 sum = \cf10 0
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // User Prompt\
    \cf9 cout \cf11 << \cf5 "Enter a Number? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 num
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout  \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // Main Logic ( Digit Sum )\
    \cf6 int \cf9 nums = num
\f1\b \cf6 ;\
    
\f0\b0 while \cf9 (nums != \cf10 0\cf9 ) \{\
       sum = sum + nums%\cf10 10
\f1\b \cf6 ;\
       
\f0\b0 \cf9 nums /= \cf10 10
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\
    cout \cf11 << \cf5 "The Digit Sum of " \cf11 << \cf9 num \cf11 << \cf5 " is " \cf11 << \cf9 sum \cf11 << \cf9 endl
\f1\b \cf6 ;\
\

\f0\b0 \cf9 \}\
\
\
\cf2 // Q.8) A palindromic number is a number that remains the same when its digits are reversed. For example, 16461.\
// Write a program that prompts the user to input a number and determine whether the number is palindrome or not.\
\
\cf6 void \cf8 Palindrome\cf9 () \{\
\
    \cf2 // Variable Declaration\
    \cf6 int \cf9 num
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 reversed = \cf10 0
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 cur = \cf10 0
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // User Prompt\
    \cf9 cout \cf11 << \cf5 "Enter a Number to check for Palindrome? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 num
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // Reversing Logic\
    \cf6 int \cf9 numCopy = num
\f1\b \cf6 ;\
    
\f0\b0 while \cf9 (numCopy != \cf10 0\cf9 ) \{\
        cur = numCopy%\cf10 10
\f1\b \cf6 ;\
        
\f0\b0 \cf9 reversed = reversed*\cf10 10 \cf9 + cur
\f1\b \cf6 ;\
        
\f0\b0 \cf9 numCopy /= \cf10 10
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\
    \cf6 if\cf9 (num == reversed) \{\
        cout \cf11 << \cf9 num \cf11 << \cf5 " is a Palindrome."
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
        cout \cf11 << \cf9 num \cf11 << \cf5 " is not a Palindrome."
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\
\
\}\
\
\cf2 // Q.9) Write a program that prompts the user to input a decimal integer and display its binary equivalent.\
\
\cf6 void \cf8 DecimalToBinary\cf9 () \{\
\
    \cf2 // Global Variable Declaration\
    \cf6 int \cf9 num
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 Binary = \cf10 0
\f1\b \cf6 ;\
    
\f0\b0 \cf2 // char BinaryS[] = "";\
\
    // User Prompt\
    \cf9 cout \cf11 << \cf5 "Enter a Decimal Number? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 num
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // Binary Conversion Process --> Addition of Zeros after 1 in Binary format is yet to be achieved, will be doing that\
    // with help of Arrays.\
    \cf6 int \cf9 cur
\f1\b \cf6 ;\
    
\f0\b0 while\cf9 (num != \cf10 0\cf9 ) \{\
        cur = num%\cf10 2
\f1\b \cf6 ;\
        
\f0\b0 \cf9 num = num/\cf10 2
\f1\b \cf6 ;\
        
\f0\b0 if \cf9 (cur == \cf10 0\cf9 ) \{\
            \cf6 continue
\f1\b ;\
        
\f0\b0 \cf9 \} \cf6 else if \cf9 (cur <= \cf10 1\cf9 ) \{\
            Binary = Binary * \cf10 10 \cf9 + \cf10 1
\f1\b \cf6 ;\
        
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
            Binary = Binary * \cf10 10 \cf9 + \cf10 0
\f1\b \cf6 ;\
        
\f0\b0 \cf9 \}\
    \}\
    cout \cf11 << \cf5 "The Binary Conversion is " \cf11 << \cf9 Binary \cf11 << \cf9 endl
\f1\b \cf6 ;\

\f0\b0 \cf9 \}\
\
\
\cf2 // Q.10) Write a program that prompts the user to input a binary number and display its decimal equivalent.\
\cf6 void \cf8 BinaryToDecimal\cf9 () \{\
\
    \cf2 // Global Variable Declaration\
    \cf6 int \cf9 Decimal = \cf10 0
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 number
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 length = \cf10 0
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // User Prompt\
    \cf9 cout \cf11 << \cf5 "Enter a Binary Number? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 number
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 numberCopy = number
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 numCopy = number
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // Getting the Length of the Binary Number\
    \cf6 while \cf9 (numberCopy != \cf10 0\cf9 ) \{\
        numberCopy /= \cf10 10
\f1\b \cf6 ;\
        
\f0\b0 \cf9 length++
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\
    \cf6 int \cf9 cur
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 power = \cf10 2
\f1\b \cf6 ;\
    
\f0\b0 \cf2 // Looping through the Binary Number for Decimal Conversion\
    \cf6 for\cf9 (\cf6 int \cf9 i = \cf10 0
\f1\b \cf6 ; 
\f0\b0 \cf9 i < length
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        cur = number%\cf10 10
\f1\b \cf6 ;\
\
        
\f0\b0 \cf2 // For Base Case when Power is 0\
        \cf6 if \cf9 (i == \cf10 0\cf9 ) \{\
            Decimal = Decimal + (cur * \cf10 1\cf9 )
\f1\b \cf6 ;\
\
        
\f0\b0 \cf9 \} \cf6 else if \cf9 (i == \cf10 1\cf9 ) \{\
            \cf2 // for Case When Power is 1\
            \cf9 Decimal = Decimal + ( cur * \cf10 2 \cf9 )
\f1\b \cf6 ;\
\
        
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
            \cf2 // for Case when Power is more than 0, We Calculate 2 Power i\
            \cf6 for\cf9 (\cf6 int \cf9 j = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 j < i
\f1\b \cf6 ; 
\f0\b0 \cf9 j++) \{\
                power = power * \cf10 2
\f1\b \cf6 ;\
            
\f0\b0 \cf9 \}\
\
            \cf2 // Adding the Current Binary Numbers Decimal Equivalent\
            \cf9 Decimal = Decimal + (cur * power)
\f1\b \cf6 ;\
            
\f0\b0 \cf9 power = \cf10 2
\f1\b \cf6 ;\
\
        
\f0\b0 \cf9 \}\
\
\
        \cf2 // Deleting the Binary Number Whose Conversion has been done.\
        \cf9 number /= \cf10 10
\f1\b \cf6 ;\
\
    
\f0\b0 \cf9 \}\
\
    cout \cf11 << \cf5 "The Decimal Conversion of " \cf11 << \cf9 numCopy \cf11 << \cf5 " is " \cf11 << \cf9 Decimal \cf11 << \cf9 endl
\f1\b \cf6 ;\

\f0\b0 \cf9 \}\
\
\
\cf2 // Q.11) Write a program that prompts the user to input a positive integer. It should then output a message indicating\
// whether the number is a prime number. [A prime number is a number that is evenly divisible only by itself and 1.\
// For example, the number 5 is prime because it can be evenly divided only by 1 and 5. The number 6, however,\
// is not prime because it can be divided evenly by I, 2, 3, and 6.]\
\
\cf6 void \cf8 PrimeNumber\cf9 () \{\
\
    \cf2 // Global Variable Declaration\
    \cf6 int \cf9 PNumber
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 isPrime = \cf10 0
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // User Prompt\
    \cf9 cout \cf11 << \cf5 "Enter a Positive Number? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 PNumber
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // Re-asking if by mistake a Negative Number is entered.\
    \cf6 if\cf9 (PNumber < \cf10 0\cf9 ) \{\
        cout \cf11 << \cf5 "Enter a Positive Number? "
\f1\b \cf6 ;\
        
\f0\b0 \cf9 cin \cf11 >> \cf9 PNumber
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\
    \cf2 // Prime Number Checking and marking the isPrime Variable according to that, 0 means not Prime & 1 means Prime.\
    \cf6 for\cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i <= (PNumber/\cf10 2\cf9 )
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        \cf6 if \cf9 (PNumber%i == \cf10 0\cf9 ) \{\
            isPrime = isPrime
\f1\b \cf6 ;\
            
\f0\b0 break
\f1\b ;\
\
        
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
            isPrime = \cf10 1
\f1\b \cf6 ;\
\
        
\f0\b0 \cf9 \}\
    \}\
\
    \cf2 // Spitting the Result based on the isPrime Variable.\
    \cf6 if\cf9 (isPrime == \cf10 1\cf9 ) \{\
        cout \cf11 << \cf9 PNumber \cf11 << \cf5 " is a Prime Number." \cf11 << \cf9 endl
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
        cout \cf11 << \cf9 PNumber \cf11 << \cf5 " is not a Prime Number." \cf11 << \cf9 endl
\f1\b \cf6 ;\
    
\f0\b0 \cf9 \}\
\}\
\
\
\cf2 // Q.12) Write a program to find prime numbers in a given range. Also calculate how many prime numbers present within\
// that given range.\
\
\cf6 void \cf8 AllPrimeInRange\cf9 () \{\
    \cf6 int \cf9 range1
\f1\b \cf6 , 
\f0\b0 \cf9 range2
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 length = \cf10 0
\f1\b \cf6 ;\
\
    
\f0\b0 \cf9 cout \cf11 << \cf5 "Enter a range (Give 2 Inputs)? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 range1 \cf11 >> \cf9 range2
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
    
\f0\b0 for\cf9 (\cf6 int \cf9 i = range1+\cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i < range2
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
        \cf6 if\cf9 (i%\cf10 2 \cf9 == \cf10 0\cf9 ) \{\
            cout \cf11 << \cf9 i \cf11 << \cf5 " -<-- Not Prime" \cf11 << \cf9 endl
\f1\b \cf6 ;\
\
        
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
            cout \cf11 << \cf9 i \cf11 << \cf5 " +<-- Prime" \cf11 << \cf9 endl
\f1\b \cf6 ;\
            
\f0\b0 \cf9 length++
\f1\b \cf6 ;\
        
\f0\b0 \cf9 \}\
    \}\
\
    cout \cf11 << \cf5 "The total number of Prime Numbers in range " \cf11 << \cf9 range1 \cf11 << \cf5 " --> " \cf11 << \cf9 range2 \cf11 << \cf5 " is " \cf11 << \cf9 length \cf11 << \cf9 endl
\f1\b \cf6 ;\
\

\f0\b0 \cf9 \}\
\
\
\cf2 // Q.13) Write a program that prompts the user to input two numbers and display its HCF and LCM.\
// [The Highest Common Factor (HCF) also called the Greatest Common Divisor (GCD) of two whole numbers, is the largest\
// whole number that's a factor of both of them. LCM is product of two numbers/HCF]\
\
\cf6 void \cf8 HCF_LCM\cf9 () \{\
\
    \cf2 // Global Variable Declaration\
    \cf6 int \cf9 num1
\f1\b \cf6 , 
\f0\b0 \cf9 num2
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 divisor
\f1\b \cf6 , 
\f0\b0 \cf9 dividend
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // User Prompt\
    \cf9 cout \cf11 << \cf5 "Enter the two numbers? "
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cin \cf11 >> \cf9 num1 \cf11 >> \cf9 num2
\f1\b \cf6 ;\
    
\f0\b0 \cf9 cout \cf11 << \cf9 endl
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 num1Copy = num1
\f1\b \cf6 ;\
    
\f0\b0 int \cf9 num2Copy = num2
\f1\b \cf6 ;\
\
    
\f0\b0 \cf2 // Checking for the larger number\
    \cf6 if \cf9 (num1 > num2) \{\
        dividend = num1
\f1\b \cf6 ;\
        
\f0\b0 \cf9 divisor = num2
\f1\b \cf6 ;\
\
    
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
        dividend = num2
\f1\b \cf6 ;\
        
\f0\b0 \cf9 divisor = num1
\f1\b \cf6 ;\
\
    
\f0\b0 \cf9 \}\
\
    \cf2 // H.C.F Calculation\
    \cf6 int \cf9 calc
\f1\b \cf6 ;\
    
\f0\b0 while \cf9 (\cf6 true\cf9 ) \{\
        calc = dividend%divisor
\f1\b \cf6 ;\
        
\f0\b0 if \cf9 (calc == \cf10 0\cf9 ) \{\
            cout \cf11 << \cf9 divisor \cf11 << \cf5 " is the H.C.F of " \cf11 << \cf9 num1 \cf11 << \cf5 " & " \cf11 << \cf9 num2 \cf11 << \cf9 endl
\f1\b \cf6 ;\
            
\f0\b0 break
\f1\b ;\
\
        
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
            dividend = divisor
\f1\b \cf6 ;\
            
\f0\b0 \cf9 divisor = calc
\f1\b \cf6 ;\
        
\f0\b0 \cf9 \}\
    \}\
\
\
\
    \cf2 // L.C.M Calculation\
    \cf6 int \cf9 result = \cf10 1
\f1\b \cf6 ;\
\
    
\f0\b0 while\cf9 (num1 != \cf10 1\cf9 )\{\
        \cf6 for\cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i <= num1Copy
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
            \cf6 if\cf9 (i == \cf10 1\cf9 ) \{\
                \cf6 continue
\f1\b ;\
            
\f0\b0 \cf9 \}\
            \cf6 if\cf9 (num1%i == \cf10 0\cf9 ) \{\
                result = result * i
\f1\b \cf6 ;\
                
\f0\b0 \cf9 num1 /= i
\f1\b \cf6 ;\
                
\f0\b0 break
\f1\b ;\
            
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
                result = result
\f1\b \cf6 ;\
            
\f0\b0 \cf9 \}\
        \}\
\
    \}\
\
    \cf6 while\cf9 (num2 != \cf10 1\cf9 )\{\
        \cf6 for\cf9 (\cf6 int \cf9 i = \cf10 1
\f1\b \cf6 ; 
\f0\b0 \cf9 i <= num2Copy
\f1\b \cf6 ; 
\f0\b0 \cf9 i++) \{\
            \cf6 if\cf9 (i == \cf10 1\cf9 )\{\
                \cf6 continue
\f1\b ;\
            
\f0\b0 \cf9 \}\
            \cf6 if\cf9 (num2%i == \cf10 0\cf9 ) \{\
                result = result * i
\f1\b \cf6 ;\
                
\f0\b0 \cf9 num2 /= i
\f1\b \cf6 ;\
                
\f0\b0 break
\f1\b ;\
            
\f0\b0 \cf9 \} \cf6 else \cf9 \{\
                result = result
\f1\b \cf6 ;\
            
\f0\b0 \cf9 \}\
        \}\
\
    \}\
\
    cout \cf11 << \cf9 result \cf11 << \cf5 " is the L.C.M of " \cf11 << \cf9 num1Copy \cf11 << \cf5 " & " \cf11 << \cf9 num2Copy \cf11 << \cf9 endl
\f1\b \cf6 ;\

\f0\b0 \cf9 \}\
\
\
\
\
\
\
\
\
\
\
\
\
\
\cf2 // Main Function\
\cf6 int \cf8 main\cf9 () \{\
\cf2 //    PrintNumbers();\
//    SumOfNumbersInLoop();\
//    MultiplicationTable();\
//    factorial();\
//    RaisedToPower();\
//    reversed();\
//    DigitSum();\
//    Palindrome();\
//    DecimalToBinary();\
//    BinaryToDecimal();\
//    PrimeNumber();\
//    AllPrimeInRange();\
    \cf9 HCF_LCM()
\f1\b \cf6 ;\
    
\f0\b0 return \cf10 0
\f1\b \cf6 ;\
\
\}}